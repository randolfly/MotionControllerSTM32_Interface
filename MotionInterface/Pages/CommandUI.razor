@page "/CommandUI"
@page "/"
@using MotionInterface.Lib.Model

<MContainer Fluid Class="fill-height">
    <MRow Style="min-height:200px"> 
        <MCol Cols="12" Sm="6">
            <MCard Class="fill-height">
                <MCardTitle>Receive Frames</MCardTitle>
                <MVirtualScroll Height="300" OverscanCount="20" ItemSize="40"
                                Items="ReceivedProtocolFrameList">
                    <ItemContent>
                        <MListItem>
                            <CommandFrame ProtocolFrame="@context"></CommandFrame>
                        </MListItem>
                    </ItemContent>
                </MVirtualScroll>
            </MCard>
        </MCol>
        <MCol Cols="12" Sm="6">
            <MCard Class="fill-height">
                <MCardTitle>Send Frames</MCardTitle>
                <MVirtualScroll Height="300" OverscanCount="20" ItemSize="40"
                                Items="SendProtocolFrameList">
                    <ItemContent>
                        <MListItem>
                            <CommandFrame ProtocolFrame="@context"></CommandFrame>
                        </MListItem>
                    </ItemContent>
                </MVirtualScroll>
            </MCard>
        </MCol>
    </MRow>
    
    <MRow NoGutters Style="margin-top: 10px;" Align="AlignTypes.End">
        
        <MCol Cols="5" Sm="4" Align="AlignTypes.Start">
            <MAutocomplete @bind-Value="ProtocolFrame.Command"
                           Items="Enum.GetValues(typeof(ProtocolCommand))
                         .Cast<ProtocolCommand>().ToList()"
                           ItemText="r=>r.ToString()"
                           ItemValue="r=>r"
                           Dense Solo
                           HideNoData
                           HideSelected
                           Placeholder="Start typing to Search"
                           Label="Command"></MAutocomplete>
        </MCol>
        <MCol Align="AlignTypes.Start">
            <MAutocomplete @bind-Value="ProtocolFrame.ParamData"
                           Items="Enum.GetValues(typeof(ProtocolCommand))
                         .Cast<ProtocolCommand>().ToList()"
                           ItemText="r=>r.ToString()"
                           ItemValue="r=>r"
                           Dense Solo
                           HideNoData
                           HideSelected
                           Placeholder="Start typing to Search"
                           Label="Command"></MAutocomplete>
        </MCol>
        <MCol Cols="2" Sm="1" 
              Align="AlignTypes.Start"
              Style="display: flex;justify-content: flex-end">
            <MButton Icon Color="indigo">
                <MIcon>mdi-send</MIcon>
            </MButton>
        </MCol>
        
    </MRow>
</MContainer>


@code {
    private StringNumber selectedReceiveFrame = 1;
    private StringNumber selectedSendFrame = 1;

    public List<ProtocolFrame> ReceivedProtocolFrameList = new ();
    public List<ProtocolFrame> SendProtocolFrameList = new ();
    public ProtocolFrame ProtocolFrame = new();
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        ReceivedProtocolFrameList.Add(new ProtocolFrame());
        ReceivedProtocolFrameList.Add(new ProtocolFrame
        {
            Command = ProtocolCommand.SendStateIdCmd,
            ParamData = new byte[] { 0x01, 0x02, 0x03, 0x04 }
        });
        ReceivedProtocolFrameList.Add(new ProtocolFrame());
        SendProtocolFrameList.Add(new ProtocolFrame());
        SendProtocolFrameList.Add(new ProtocolFrame());
        SendProtocolFrameList.Add(new ProtocolFrame
        {
            Command = ProtocolCommand.SendStateIdCmd,
            ParamData = new byte[] { 0x01, 0x02, 0x03, 0x04 }
        });
        SendProtocolFrameList.Add(new ProtocolFrame
        {
            Command = ProtocolCommand.SendStateIdCmd,
            ParamData = new byte[] { 0x01, 0x02, 0x03, 0x04 }
        });
        SendProtocolFrameList.Add(new ProtocolFrame());
        SendProtocolFrameList.Add(new ProtocolFrame());
        SendProtocolFrameList.Add(new ProtocolFrame());
        SendProtocolFrameList.Add(new ProtocolFrame());
        SendProtocolFrameList.Add(new ProtocolFrame());
        SendProtocolFrameList.Add(new ProtocolFrame());
        SendProtocolFrameList.Add(new ProtocolFrame());
        SendProtocolFrameList.Add(new ProtocolFrame());
    }

}