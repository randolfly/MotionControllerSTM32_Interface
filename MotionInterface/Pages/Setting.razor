@page "/Setting"
@page "/"


@using MotionInterface.Lib.Service


<MRow>
    <MCol Cols="4">
        <MCard>
            <MCardTitle>CmdPort Config</MCardTitle>
            <SerialComConfig SerialPort="CommandCommunicationService.SerialPort"></SerialComConfig>
        </MCard>
    </MCol>
    <MCol Cols="4">
        <MCard>
            <MCardTitle>LogPort Config</MCardTitle>
            <SerialComConfig SerialPort="DataCommunicationService.SerialPort"></SerialComConfig>

        </MCard>
    </MCol>
</MRow>
<MRow>
    <MCol Cols="4" Class="d-flex justify-center">
        <MButton Flat Dark Color="primary"
                 OnClick="OnSaveConfig"
                 Style="margin-right: 5px;">
            <MIcon Icon="@("mdi-content-save")" />
            Save Config
        </MButton>
    </MCol>
</MRow>


@code {
    [Inject] 
    private CommandCommunicationService CommandCommunicationService { get; set; } = default!;
    [Inject] 
    private DataCommunicationService DataCommunicationService { get; set; } = default!;
    [Inject]
    private AppConfigService AppConfigService { get; set; } = default!;

    protected override void OnInitialized()
    {
        AppConfigService.UpdateConfiguration();
        UpdateSerialPortConfig();
    }

    private void UpdateSerialPortConfig()
    {
        DataCommunicationService.SerialPort.PortName = AppConfigService.AppConfig.DatalogPortConfig.PortName;
        DataCommunicationService.SerialPort.BaudRate = AppConfigService.AppConfig.DatalogPortConfig.BaudRate;
        DataCommunicationService.SerialPort.DataBits = AppConfigService.AppConfig.DatalogPortConfig.DataBits;
        DataCommunicationService.SerialPort.StopBits = AppConfigService.AppConfig.DatalogPortConfig.StopBits;
        DataCommunicationService.SerialPort.Parity = AppConfigService.AppConfig.DatalogPortConfig.Parity;

        CommandCommunicationService.SerialPort.PortName = AppConfigService.AppConfig.CommandSerialPortConfig.PortName;
        CommandCommunicationService.SerialPort.BaudRate = AppConfigService.AppConfig.CommandSerialPortConfig.BaudRate;
        CommandCommunicationService.SerialPort.DataBits = AppConfigService.AppConfig.CommandSerialPortConfig.DataBits;
        CommandCommunicationService.SerialPort.StopBits = AppConfigService.AppConfig.CommandSerialPortConfig.StopBits;
        CommandCommunicationService.SerialPort.Parity = AppConfigService.AppConfig.CommandSerialPortConfig.Parity;
    }

    private void SaveSerialPortConfig()
    {
        AppConfigService.AppConfig.DatalogPortConfig.PortName = DataCommunicationService.SerialPort.PortName;
        AppConfigService.AppConfig.DatalogPortConfig.BaudRate = DataCommunicationService.SerialPort.BaudRate;
        AppConfigService.AppConfig.DatalogPortConfig.DataBits = DataCommunicationService.SerialPort.DataBits;
        AppConfigService.AppConfig.DatalogPortConfig.StopBits = DataCommunicationService.SerialPort.StopBits;
        AppConfigService.AppConfig.DatalogPortConfig.Parity = DataCommunicationService.SerialPort.Parity;

        AppConfigService.AppConfig.CommandSerialPortConfig.PortName = CommandCommunicationService.SerialPort.PortName;
        AppConfigService.AppConfig.CommandSerialPortConfig.BaudRate = CommandCommunicationService.SerialPort.BaudRate;
        AppConfigService.AppConfig.CommandSerialPortConfig.DataBits = CommandCommunicationService.SerialPort.DataBits;
        AppConfigService.AppConfig.CommandSerialPortConfig.StopBits = CommandCommunicationService.SerialPort.StopBits;
        AppConfigService.AppConfig.CommandSerialPortConfig.Parity = CommandCommunicationService.SerialPort.Parity;
    }


    private void OnSaveConfig() {
        SaveAppConfig();
    }

    private void SaveAppConfig()
    {
        SaveSerialPortConfig();
        AppConfigService.SaveConfiguration(AppConfigService.AppConfig);
    }
}